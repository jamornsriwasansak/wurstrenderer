stages:
  - build


# -------------------------------------------------------
# ubuntu 16
# -------------------------------------------------------
ubuntu16-gcc-release:
  stage: build
  tags:
    - docker
  image: ubuntu:16.04
  script:
    - apt -y update
    - apt -y install cmake g++
    - mkdir build
    - cd build
    - export CXX=g++
    - cmake -DCMAKE_BUILD_TYPE=Release ..
    - make

ubuntu16-gcc-debug:
  stage: build
  tags:
    - docker
  image: ubuntu:16.04
  script:
    - apt -y update
    - apt -y install cmake g++
    - mkdir build
    - cd build
    - export CXX=g++
    - cmake -DCMAKE_BUILD_TYPE=Debug ..
    - make

# -------------------------------------------------------
# ubuntu 18
# -------------------------------------------------------
ubuntu18-gcc-release:
  stage: build
  tags:
    - docker
  image: ubuntu:18.04
  script:
    - apt -y update
    - apt -y install cmake g++
    - mkdir build
    - cd build
    - export CXX=g++
    - cmake -DCMAKE_BUILD_TYPE=Release ..
    - make

ubuntu18-gcc-debug:
  stage: build
  tags:
    - docker
  image: ubuntu:18.04
  script:
    - apt -y update
    - apt -y install cmake g++
    - mkdir build
    - cd build
    - export CXX=g++
    - cmake -DCMAKE_BUILD_TYPE=Debug ..
    - make

ubuntu18-clang-release:
  stage: build
  tags:
    - docker
  image: ubuntu:18.04
  script:
    - apt -y update
    - apt -y install cmake clang-6.0
    - mkdir build
    - cd build
    - export CXX=clang++-6.0
    - cmake -DCMAKE_BUILD_TYPE=Release ..
    - make

ubuntu18-clang-debug:
  stage: build
  tags:
    - docker
  image: ubuntu:18.04
  script:
    - apt -y update
    - apt -y install cmake clang-6.0
    - mkdir build
    - cd build
    - export CXX=clang++-6.0
    - cmake -DCMAKE_BUILD_TYPE=Debug ..
    - make






